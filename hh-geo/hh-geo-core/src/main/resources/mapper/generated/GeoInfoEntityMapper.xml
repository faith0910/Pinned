<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jwc.geo.mapper.GeoInfoEntityMapper" >
  <resultMap id="BaseResultMap" type="com.jwc.geo.entity.GeoInfoEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="can_deliver" property="canDeliver" jdbcType="INTEGER" />
    <result column="self_support" property="selfSupport" jdbcType="INTEGER" />
    <result column="pinyin" property="pinyin" jdbcType="VARCHAR" />
    <result column="initial" property="initial" jdbcType="VARCHAR" />
    <result column="hot" property="hot" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="modifier" property="modifier" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, `name`, parent_id, `level`, sort, can_deliver, self_support, pinyin, `initial`, 
    hot, version, creator, modifier
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jwc.geo.entity.GeoInfoEntityExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from geo_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from geo_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from geo_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jwc.geo.entity.GeoInfoEntityExample" >
    delete from geo_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jwc.geo.entity.GeoInfoEntity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into geo_info (`name`, parent_id, `level`, 
      sort, can_deliver, self_support, 
      pinyin, `initial`, hot, 
      version, creator, modifier
      )
    values (#{name,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{canDeliver,jdbcType=INTEGER}, #{selfSupport,jdbcType=INTEGER}, 
      #{pinyin,jdbcType=VARCHAR}, #{initial,jdbcType=VARCHAR}, #{hot,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jwc.geo.entity.GeoInfoEntity" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into geo_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        `name`,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="level != null" >
        `level`,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="canDeliver != null" >
        can_deliver,
      </if>
      <if test="selfSupport != null" >
        self_support,
      </if>
      <if test="pinyin != null" >
        pinyin,
      </if>
      <if test="initial != null" >
        `initial`,
      </if>
      <if test="hot != null" >
        hot,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="canDeliver != null" >
        #{canDeliver,jdbcType=INTEGER},
      </if>
      <if test="selfSupport != null" >
        #{selfSupport,jdbcType=INTEGER},
      </if>
      <if test="pinyin != null" >
        #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="initial != null" >
        #{initial,jdbcType=VARCHAR},
      </if>
      <if test="hot != null" >
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jwc.geo.entity.GeoInfoEntityExample" resultType="java.lang.Integer" >
    select count(*) from geo_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update geo_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.level != null" >
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.canDeliver != null" >
        can_deliver = #{record.canDeliver,jdbcType=INTEGER},
      </if>
      <if test="record.selfSupport != null" >
        self_support = #{record.selfSupport,jdbcType=INTEGER},
      </if>
      <if test="record.pinyin != null" >
        pinyin = #{record.pinyin,jdbcType=VARCHAR},
      </if>
      <if test="record.initial != null" >
        `initial` = #{record.initial,jdbcType=VARCHAR},
      </if>
      <if test="record.hot != null" >
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null" >
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.modifier != null" >
        modifier = #{record.modifier,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update geo_info
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      `level` = #{record.level,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      can_deliver = #{record.canDeliver,jdbcType=INTEGER},
      self_support = #{record.selfSupport,jdbcType=INTEGER},
      pinyin = #{record.pinyin,jdbcType=VARCHAR},
      `initial` = #{record.initial,jdbcType=VARCHAR},
      hot = #{record.hot,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      modifier = #{record.modifier,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jwc.geo.entity.GeoInfoEntity" >
    update geo_info
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="level != null" >
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="canDeliver != null" >
        can_deliver = #{canDeliver,jdbcType=INTEGER},
      </if>
      <if test="selfSupport != null" >
        self_support = #{selfSupport,jdbcType=INTEGER},
      </if>
      <if test="pinyin != null" >
        pinyin = #{pinyin,jdbcType=VARCHAR},
      </if>
      <if test="initial != null" >
        `initial` = #{initial,jdbcType=VARCHAR},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jwc.geo.entity.GeoInfoEntity" >
    update geo_info
    set `name` = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      `level` = #{level,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      can_deliver = #{canDeliver,jdbcType=INTEGER},
      self_support = #{selfSupport,jdbcType=INTEGER},
      pinyin = #{pinyin,jdbcType=VARCHAR},
      `initial` = #{initial,jdbcType=VARCHAR},
      hot = #{hot,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>